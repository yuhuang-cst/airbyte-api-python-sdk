"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

# from __future__ import annotations
import dataclasses
from airbyte import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NormalizationDestinationDefinitionConfig:
    r"""describes a normalization config for destination definition"""
    
    supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supported') }})
    r"""whether the destination definition supports normalization."""
    normalization_integration_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('normalizationIntegrationType'), 'exclude': lambda f: f is None }})
    r"""a field indicating the type of integration dialect to use for normalization."""
    normalization_repository: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('normalizationRepository'), 'exclude': lambda f: f is None }})
    r"""a field indicating the name of the repository to be used for normalization. If the value of the flag is NULL - normalization is not used."""
    normalization_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('normalizationTag'), 'exclude': lambda f: f is None }})
    r"""a field indicating the tag of the docker repository to be used for normalization."""
    